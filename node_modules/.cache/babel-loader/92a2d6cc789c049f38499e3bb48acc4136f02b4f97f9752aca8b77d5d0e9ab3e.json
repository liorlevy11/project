{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u05D0\\u05D5\\u05E0\\u05D9\\u05D1\\u05E8\\u05E1\\u05D9\\u05D8\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D5\\\\cisco\\\\\\u200F\\u200F\\u200F\\u200Freact-table-tutorial - \\u05E2\\u05D5\\u05EA\\u05E7 - \\u05E2\\u05D5\\u05EA\\u05E7\\\\src\\\\components\\\\EC2DashboardPage.js\",\n  _s = $RefreshSig$();\nimport \"./EC2DashboardPage.css\";\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n//import { useTable } from \"react-table\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EC2DashboardPage() {\n  _s();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const email = searchParams.get(\"email\");\n  const [sortKey, setSortKey] = useState(\"\");\n  const [dropdownKey, setDropdownKey] = useState(\"\");\n  const [sortedData, setSortedData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [showNextButton, setShowNextButton] = useState(false);\n  const [sortError, setSortError] = useState(\"\");\n  const [nextButtonClickCount, setNextButtonClickCount] = useState(0);\n  const pageSize = 3;\n  const handleSort = async () => {\n    if (!sortKey && !dropdownKey) {\n      setSortError(\"To sort, you must select the attribute to sort by and the order. Please select attribute and order.\");\n    } else if (!sortKey) {\n      setSortError(\"To sort, you must select the attribute to sort by. Please select attribute.\");\n    } else if (!dropdownKey) {\n      setSortError(\"To sort, you must select the attribute to sort by and the order. Please select order.\");\n    } else {\n      setSortError(\"\");\n      setCurrentPage(1);\n      setNextButtonClickCount(0);\n      try {\n        const response = await axios.post(\"http://localhost:3001/sortData\", {\n          sortKey,\n          dropdownKey,\n          startIndex: 0,\n          email\n        });\n        setSortedData(response.data);\n        setShowNextButton(response.data.length >= pageSize);\n      } catch (error) {\n        console.error(\"Error sorting data:\", error.data);\n      }\n    }\n  };\n  const handleClickNext = async () => {\n    try {\n      const startIndex = pageSize * (nextButtonClickCount + 1);\n      let response;\n      if (sortKey && dropdownKey) {\n        response = await axios.post(\"http://localhost:3001/sortData\", {\n          sortKey,\n          dropdownKey,\n          startIndex,\n          email\n        });\n      } else {\n        response = await axios.post(\"http://localhost:3001/sortData\", {\n          startIndex\n        });\n      }\n      const newData = response.data;\n      if (newData.length > 0) {\n        setSortedData(prevData => [...prevData, ...newData]);\n        setCurrentPage(prevPage => prevPage + 1);\n        setNextButtonClickCount(prevCount => prevCount + 1);\n        setShowNextButton(newData.length >= pageSize);\n      } else {\n        setShowNextButton(false);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const data = useMemo(() => {\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    return sortedData.slice(startIndex, endIndex);\n  }, [currentPage, sortedData]);\n  const columns = useMemo(() => [{\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"ID\",\n    accessor: \"id\"\n  }, {\n    Header: \"Type\",\n    accessor: \"type\"\n  }, {\n    Header: \"State\",\n    accessor: \"state\"\n  }, {\n    Header: \"AZ\",\n    accessor: \"az\"\n  }, {\n    Header: \"Public IP\",\n    accessor: \"publicIP\"\n  }, {\n    Header: \"Private IPs\",\n    accessor: \"privateIPs\"\n  }], []);\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //       const response = await axios.get(`http://localhost:3001/loadData?email=${email}`);\n  //       setSortedData(response.data);\n  //       setShowNextButton(response.data.length >= pageSize);\n  //     } catch (error) {\n  //       console.error(\"Error fetching data:\", error);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, [email]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Active EC2 Instances \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transparent-square\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"attribute-dropdown\",\n            value: sortKey,\n            onChange: e => setSortKey(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Attribute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"id\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"type\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"state\",\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"az\",\n              children: \"AZ\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"publicIP\",\n              children: \"Public IP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"privateIPs\",\n              children: \"Private IPs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"order-dropdown\",\n            value: dropdownKey,\n            onChange: e => setDropdownKey(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ascending\",\n              children: \"Ascending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"descending\",\n              children: \"Descending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sort-button\",\n            onClick: handleSort,\n            children: \"Sort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), sortError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: sortError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: column.Header\n                }, column.accessor, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row[column.accessor]\n                }, column.accessor, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this))\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), showNextButton && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"next-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-button\",\n          onClick: handleClickNext,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(EC2DashboardPage, \"JTKF9zDLkDzjpgnGX1taDXH6LKQ=\", false, function () {\n  return [useLocation];\n});\n_c = EC2DashboardPage;\nexport default EC2DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"EC2DashboardPage\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","useLocation","axios","EC2DashboardPage","location","searchParams","URLSearchParams","search","email","get","sortKey","setSortKey","dropdownKey","setDropdownKey","sortedData","setSortedData","currentPage","setCurrentPage","showNextButton","setShowNextButton","sortError","setSortError","nextButtonClickCount","setNextButtonClickCount","pageSize","handleSort","response","post","startIndex","data","length","error","console","handleClickNext","newData","prevData","prevPage","prevCount","endIndex","slice","columns","Header","accessor","e","target","value","map","column","row","index"],"sources":["C:/אוניברסיטה/לימודים/סמסטר ו/cisco/‏‏‏‏react-table-tutorial - עותק - עותק/src/components/EC2DashboardPage.js"],"sourcesContent":["import \"./EC2DashboardPage.css\";\r\nimport React, { useState, useMemo, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n//import { useTable } from \"react-table\";\r\nimport axios from \"axios\";\r\n\r\nfunction EC2DashboardPage() {\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const email = searchParams.get(\"email\");\r\n\r\n  const [sortKey, setSortKey] = useState(\"\");\r\n  const [dropdownKey, setDropdownKey] = useState(\"\");\r\n  const [sortedData, setSortedData] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [showNextButton, setShowNextButton] = useState(false);\r\n  const [sortError, setSortError] = useState(\"\");\r\n  const [nextButtonClickCount, setNextButtonClickCount] = useState(0);\r\n  const pageSize = 3;\r\n\r\n  const handleSort = async () => {\r\n    if (!sortKey && !dropdownKey) {\r\n      setSortError(\"To sort, you must select the attribute to sort by and the order. Please select attribute and order.\");\r\n    } else if (!sortKey) {\r\n      setSortError(\"To sort, you must select the attribute to sort by. Please select attribute.\");\r\n    } else if (!dropdownKey) {\r\n      setSortError(\"To sort, you must select the attribute to sort by and the order. Please select order.\");\r\n    } else {\r\n      setSortError(\"\");\r\n\r\n      setCurrentPage(1);\r\n      setNextButtonClickCount(0);\r\n\r\n      try {\r\n        const response = await axios.post(\"http://localhost:3001/sortData\", { sortKey, dropdownKey, startIndex: 0,email });\r\n        setSortedData(response.data);\r\n        setShowNextButton(response.data.length >= pageSize);\r\n      } catch (error) {\r\n        console.error(\"Error sorting data:\", error.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClickNext = async () => {\r\n    try {\r\n      const startIndex = pageSize * (nextButtonClickCount + 1);\r\n\r\n      let response;\r\n\r\n      if (sortKey && dropdownKey) {\r\n        response = await axios.post(\"http://localhost:3001/sortData\", { sortKey, dropdownKey, startIndex,email });\r\n      } else {\r\n        response = await axios.post(\"http://localhost:3001/sortData\", { startIndex });\r\n      }\r\n\r\n      const newData = response.data;\r\n\r\n      if (newData.length > 0) {\r\n        setSortedData((prevData) => [...prevData, ...newData]);\r\n        setCurrentPage((prevPage) => prevPage + 1);\r\n        setNextButtonClickCount((prevCount) => prevCount + 1);\r\n        setShowNextButton(newData.length >= pageSize);\r\n      } else {\r\n        setShowNextButton(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const data = useMemo(() => {\r\n    const startIndex = (currentPage - 1) * pageSize;\r\n    const endIndex = startIndex + pageSize;\r\n    return sortedData.slice(startIndex, endIndex);\r\n  }, [currentPage, sortedData]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"name\",\r\n      },\r\n      {\r\n        Header: \"ID\",\r\n        accessor: \"id\",\r\n      },\r\n      {\r\n        Header: \"Type\",\r\n        accessor: \"type\",\r\n      },\r\n      {\r\n        Header: \"State\",\r\n        accessor: \"state\",\r\n      },\r\n      {\r\n        Header: \"AZ\",\r\n        accessor: \"az\",\r\n      },\r\n      {\r\n        Header: \"Public IP\",\r\n        accessor: \"publicIP\",\r\n      },\r\n      {\r\n        Header: \"Private IPs\",\r\n        accessor: \"privateIPs\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(`http://localhost:3001/loadData?email=${email}`);\r\n  //       setSortedData(response.data);\r\n  //       setShowNextButton(response.data.length >= pageSize);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching data:\", error);\r\n  //     }\r\n  //   };\r\n  \r\n  //   fetchData();\r\n  // }, [email]);\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"title\">Active EC2 Instances </h1>\r\n      <div className=\"container\">\r\n        <div className=\"transparent-square\">\r\n          <div className=\"dropdown-container\">\r\n            <select\r\n              className=\"attribute-dropdown\"\r\n              value={sortKey}\r\n              onChange={(e) => setSortKey(e.target.value)}\r\n            >\r\n              <option value=\"\">Select Attribute</option>\r\n              <option value=\"name\">Name</option>\r\n              <option value=\"id\">ID</option>\r\n              <option value=\"type\">Type</option>\r\n              <option value=\"state\">State</option>\r\n              <option value=\"az\">AZ</option>\r\n              <option value=\"publicIP\">Public IP</option>\r\n              <option value=\"privateIPs\">Private IPs</option>\r\n            </select>\r\n            <select\r\n              className=\"order-dropdown\"\r\n              value={dropdownKey}\r\n              onChange={(e) => setDropdownKey(e.target.value)}\r\n            >\r\n              <option value=\"\">Select Order</option>\r\n              <option value=\"ascending\">Ascending</option>\r\n              <option value=\"descending\">Descending</option>\r\n            </select>\r\n            <button className=\"sort-button\" onClick={handleSort}>\r\n              Sort\r\n            </button>\r\n          </div>\r\n          {sortError && <div className=\"error-message\">{sortError}</div>}\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <div className=\"table-wrapper\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  {columns.map((column) => (\r\n                    <th key={column.accessor}>{column.Header}</th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((row, index) => (\r\n                  <tr key={index}>\r\n                    {columns.map((column) => (\r\n                      <td key={column.accessor}>{row[column.accessor]}</td>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          \r\n            </div>\r\n      </div>\r\n      \r\n        {showNextButton && (\r\n          <div className=\"next-button-container\">\r\n            <button className=\"next-button\" onClick={handleClickNext}>\r\n              Next\r\n            </button>\r\n            </div>\r\n          \r\n        )} </div></div>\r\n    \r\n  );\r\n}\r\n\r\nexport default EC2DashboardPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}