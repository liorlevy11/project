{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u05D0\\u05D5\\u05E0\\u05D9\\u05D1\\u05E8\\u05E1\\u05D9\\u05D8\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D5\\\\cisco\\\\\\u200F\\u200F\\u200F\\u200Freact-table-tutorial - \\u05E2\\u05D5\\u05EA\\u05E7 - \\u05E2\\u05D5\\u05EA\\u05E7\\\\src\\\\components\\\\EC2DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EC2DashboardPage(_ref) {\n  _s();\n  let {\n    onLogout\n  } = _ref;\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const email = searchParams.get(\"email\");\n  const navigate = useNavigate();\n  const [sortKey, setSortKey] = useState(\"\");\n  const [dropdownKey, setDropdownKey] = useState(\"\");\n  const [sortedData, setSortedData] = useState([]);\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [showNextButton, setShowNextButton] = useState(true);\n  const [sortError, setSortError] = useState(\"\");\n  const [region, setSelectedRegion] = useState(\"\");\n  const [showSortContainer, setShowContainer] = useState(false);\n  const pageSize = 10;\n  const regions = ['us-east-1', 'us-east-2', 'us-west-1', 'us-west-2', 'ap-south-1', 'ap-southeast-1', 'ap-southeast-2', 'ap-northeast-1', 'ap-northeast-2', 'ap-northeast-3', 'ca-central-1', 'eu-central-1', 'eu-west-1', 'eu-west-2', 'eu-west-3', 'eu-north-1', 'sa-east-1', 'af-south-1', 'ap-east-1', 'ap-south-2', 'ap-southeast-3', 'ap-southeast-4', 'eu-south-1', 'eu-south-2', 'eu-central-2', 'me-south-1', 'me-central-1'];\n  const handleSort = async () => {\n    if (!sortKey && !dropdownKey && !region) {\n      setSortError(\"To sort, you must select the region you want, attribute to sort by, and the order. Please select attribute and order.\");\n    } else if (!sortKey) {\n      setSortError(\"To sort, you must select the attribute to sort by. Please select attribute.\");\n    } else if (!dropdownKey) {\n      setSortError(\"To sort, you must select the attribute to sort by and the order. Please select order.\");\n    } else {\n      setSortError(\"\");\n      setCurrentPage(1);\n      // if (sortedData.length>0) {\n      const sorted = [...sortedData].sort((a, b) => {\n        if (dropdownKey === \"ascending\") {\n          return a[sortKey].localeCompare(b[sortKey]);\n        } else if (dropdownKey === \"descending\") {\n          return b[sortKey].localeCompare(a[sortKey]);\n        }\n      });\n      setSortedData(sorted);\n      // } else {\n      //   try {\n      //     let response;\n\n      //     if (sortKey && dropdownKey) {\n      //       response = await axios.post(\"http://localhost:3001/getData\", { sortKey, dropdownKey, email, region });\n      //     } else {\n      //       setDropdownKey(\"ascending\");\n      //       setSortKey(\"name\");\n      //       setSelectedRegion(\"us-east-1\");\n      //       response = await axios.post(\"http://localhost:3001/getData\", { sortKey, dropdownKey, email, region });\n      //     }\n\n      //     const newData = response.data;\n      //     setSortedData(newData);\n      //     setCurrentPage((prevPage) => prevPage + 1);\n      //     // setShowNextButton(newData.length >= pageSize);\n      //   } catch (error) {\n      //     console.error(\"Error fetching data:\", error);\n      //   }\n      // }\n    }\n  };\n\n  const handleClickNext = async () => {\n    try {\n      const startIndex = 0;\n      let response;\n      if (sortKey && dropdownKey) {\n        response = await axios.post(\"http://localhost:3001/sortData\", {\n          sortKey,\n          dropdownKey,\n          startIndex,\n          email,\n          region\n        });\n      } else {\n        setDropdownKey(\"ascending\");\n        setSortKey(\"name\");\n        setSelectedRegion(\"us-east-1\");\n        response = await axios.post(\"http://localhost:3001/sortData\", {\n          sortKey,\n          dropdownKey,\n          startIndex,\n          email,\n          region\n        });\n      }\n      const newData = response.data;\n      setSortedData(newData);\n      setCurrentPage(prevPage => prevPage + 1);\n      setShowContainer(true);\n      // setShowNextButton(newData.length >= pageSize);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await axios.post(\"http://localhost:3001/logout\", {\n        email\n      });\n      // Clear any necessary state or perform other actions on successful logout\n      onLogout(); // Call the onLogout function passed from the App component\n      navigate(\"/login\");\n      //props.onFormSwitch(\"login\");\n    } catch (error) {\n      console.error(\"Error logging out:\", error);\n    }\n  };\n  const data = useMemo(() => {\n    //const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    return sortedData.slice(startIndex, endIndex);\n  }, [\n  //currentPage,\n  sortedData]);\n  const columns = useMemo(() => [{\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"ID\",\n    accessor: \"id\"\n  }, {\n    Header: \"Type\",\n    accessor: \"type\"\n  }, {\n    Header: \"State\",\n    accessor: \"state\"\n  }, {\n    Header: \"AZ\",\n    accessor: \"az\"\n  }, {\n    Header: \"Public IP\",\n    accessor: \"publicIP\"\n  }, {\n    Header: \"Private IPs\",\n    accessor: \"privateIPs\"\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logout-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Active EC2 Instances \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), showSortContainer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transparent-square\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"attribute-dropdown\",\n            value: sortKey,\n            onChange: e => setSortKey(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Attribute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"id\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"type\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"state\",\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"az\",\n              children: \"AZ\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"publicIP\",\n              children: \"Public IP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"privateIPs\",\n              children: \"Private IPs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"order-dropdown\",\n            value: dropdownKey,\n            onChange: e => setDropdownKey(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ascending\",\n              children: \"Ascending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"descending\",\n              children: \"Descending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sort-button\",\n            onClick: handleSort,\n            children: \"Sort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), sortError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: sortError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: column.Header\n                }, column.accessor, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row[column.accessor]\n                }, column.accessor, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 23\n                }, this))\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"region-dropdown\",\n      value: region,\n      onChange: e => setSelectedRegion(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 5\n      }, this), regions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: region,\n        children: region\n      }, region, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), \"(\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"next-button-container\",\n      children: [showSortContainer && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"for retrieve other region change the region/ for retrieve more data - and click on the buttun  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-button\",\n        onClick: handleClickNext,\n        children: \"retrieve EC2 instance for Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(EC2DashboardPage, \"FhoRoTMt9FCUfg9waYtpnTJVs2w=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = EC2DashboardPage;\nexport default EC2DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"EC2DashboardPage\");","map":{"version":3,"names":["React","useState","useMemo","useLocation","axios","useNavigate","EC2DashboardPage","onLogout","location","searchParams","URLSearchParams","search","email","get","navigate","sortKey","setSortKey","dropdownKey","setDropdownKey","sortedData","setSortedData","sortError","setSortError","region","setSelectedRegion","showSortContainer","setShowContainer","pageSize","regions","handleSort","setCurrentPage","sorted","sort","a","b","localeCompare","handleClickNext","startIndex","response","post","newData","data","prevPage","error","console","handleLogout","endIndex","slice","columns","Header","accessor","e","target","value","map","column","row","index"],"sources":["C:/אוניברסיטה/לימודים/סמסטר ו/cisco/‏‏‏‏react-table-tutorial - עותק - עותק/src/components/EC2DashboardPage.js"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction EC2DashboardPage({ onLogout }) {\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const email = searchParams.get(\"email\");\r\n  const navigate = useNavigate();\r\n  const [sortKey, setSortKey] = useState(\"\");\r\n  const [dropdownKey, setDropdownKey] = useState(\"\");\r\n   const [sortedData, setSortedData] = useState([]);\r\n  // const [currentPage, setCurrentPage] = useState(1);\r\n  // const [showNextButton, setShowNextButton] = useState(true);\r\n  const [sortError, setSortError] = useState(\"\");\r\n  const [region, setSelectedRegion] = useState(\"\");\r\n  const [showSortContainer, setShowContainer] = useState(false);\r\n\r\n  const pageSize = 10;\r\n\r\n\r\n  const regions = [\r\n    'us-east-1',\r\n    'us-east-2',\r\n    'us-west-1',\r\n    'us-west-2',\r\n    'ap-south-1',\r\n    'ap-southeast-1',\r\n    'ap-southeast-2',\r\n    'ap-northeast-1',\r\n    'ap-northeast-2',\r\n    'ap-northeast-3',\r\n    'ca-central-1',\r\n    'eu-central-1',\r\n    'eu-west-1',\r\n    'eu-west-2',\r\n    'eu-west-3',\r\n    'eu-north-1',\r\n    'sa-east-1',\r\n    'af-south-1',\r\n    'ap-east-1',\r\n    'ap-south-2',\r\n    'ap-southeast-3',\r\n    'ap-southeast-4',\r\n    'eu-south-1',\r\n    'eu-south-2',\r\n    'eu-central-2',\r\n    'me-south-1',\r\n    'me-central-1'\r\n  ];\r\n  const handleSort = async () => {\r\n    if (!sortKey && !dropdownKey && !region) {\r\n      setSortError(\"To sort, you must select the region you want, attribute to sort by, and the order. Please select attribute and order.\");\r\n    } else if (!sortKey) {\r\n      setSortError(\"To sort, you must select the attribute to sort by. Please select attribute.\");\r\n    } else if (!dropdownKey) {\r\n      setSortError(\"To sort, you must select the attribute to sort by and the order. Please select order.\");\r\n    } else {\r\n      setSortError(\"\");\r\n  \r\n      setCurrentPage(1);\r\n      // if (sortedData.length>0) {\r\n        const sorted = [...sortedData].sort((a, b) => {\r\n          if (dropdownKey === \"ascending\") {\r\n            return a[sortKey].localeCompare(b[sortKey]);\r\n          } else if (dropdownKey === \"descending\") {\r\n            return b[sortKey].localeCompare(a[sortKey]);\r\n          }\r\n        });\r\n        setSortedData(sorted);\r\n      // } else {\r\n      //   try {\r\n      //     let response;\r\n  \r\n      //     if (sortKey && dropdownKey) {\r\n      //       response = await axios.post(\"http://localhost:3001/getData\", { sortKey, dropdownKey, email, region });\r\n      //     } else {\r\n      //       setDropdownKey(\"ascending\");\r\n      //       setSortKey(\"name\");\r\n      //       setSelectedRegion(\"us-east-1\");\r\n      //       response = await axios.post(\"http://localhost:3001/getData\", { sortKey, dropdownKey, email, region });\r\n      //     }\r\n  \r\n      //     const newData = response.data;\r\n      //     setSortedData(newData);\r\n      //     setCurrentPage((prevPage) => prevPage + 1);\r\n      //     // setShowNextButton(newData.length >= pageSize);\r\n      //   } catch (error) {\r\n      //     console.error(\"Error fetching data:\", error);\r\n      //   }\r\n      // }\r\n    }\r\n  };\r\n  \r\n  const handleClickNext = async () => {\r\n    try {\r\n      const startIndex =0;\r\n\r\n      let response;\r\n\r\n      if (sortKey && dropdownKey) {\r\n        response = await axios.post(\"http://localhost:3001/sortData\", { sortKey, dropdownKey, startIndex, email,region });\r\n      } else {\r\n        setDropdownKey(\"ascending\");\r\n        setSortKey(\"name\");\r\n        setSelectedRegion(\"us-east-1\");\r\n        response = await axios.post(\"http://localhost:3001/sortData\", { sortKey, dropdownKey, startIndex, email,region });\r\n      }\r\n\r\n      const newData = response.data;\r\n        setSortedData(newData);\r\n        setCurrentPage((prevPage) => prevPage + 1);\r\n        setShowContainer(true);\r\n       // setShowNextButton(newData.length >= pageSize);\r\n   \r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await axios.post(\"http://localhost:3001/logout\", { email });\r\n      // Clear any necessary state or perform other actions on successful logout\r\n      onLogout(); // Call the onLogout function passed from the App component\r\n      navigate(\"/login\");\r\n      //props.onFormSwitch(\"login\");\r\n    } catch (error) {\r\n      console.error(\"Error logging out:\", error);\r\n    }\r\n  };\r\n\r\n  const data = useMemo(() => {\r\n    //const startIndex = (currentPage - 1) * pageSize;\r\n    const endIndex = startIndex + pageSize;\r\n    return sortedData.slice(startIndex, endIndex);\r\n  }, [\r\n    //currentPage,\r\n     sortedData]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"name\",\r\n      },\r\n      {\r\n        Header: \"ID\",\r\n        accessor: \"id\",\r\n      },\r\n      {\r\n        Header: \"Type\",\r\n        accessor: \"type\",\r\n      },\r\n      {\r\n        Header: \"State\",\r\n        accessor: \"state\",\r\n      },\r\n      {\r\n        Header: \"AZ\",\r\n        accessor: \"az\",\r\n      },\r\n      {\r\n        Header: \"Public IP\",\r\n        accessor: \"publicIP\",\r\n      },\r\n      {\r\n        Header: \"Private IPs\",\r\n        accessor: \"privateIPs\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n          \r\n<div className=\"logout-button-container\">\r\n          <button className=\"logout-button\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n\r\n      <h1 className=\"title\">Active EC2 Instances </h1>\r\n      {showSortContainer &&\r\n      <div className=\"container\">\r\n        <div className=\"transparent-square\">\r\n          <div className=\"dropdown-container\">\r\n            <select\r\n              className=\"attribute-dropdown\"\r\n              value={sortKey}\r\n              onChange={(e) => setSortKey(e.target.value)}\r\n            >\r\n              <option value=\"\">Select Attribute</option>\r\n              <option value=\"name\">Name</option>\r\n              <option value=\"id\">ID</option>\r\n              <option value=\"type\">Type</option>\r\n              <option value=\"state\">State</option>\r\n              <option value=\"az\">AZ</option>\r\n              <option value=\"publicIP\">Public IP</option>\r\n              <option value=\"privateIPs\">Private IPs</option>\r\n            </select>\r\n            <select\r\n              className=\"order-dropdown\"\r\n              value={dropdownKey}\r\n              onChange={(e) => setDropdownKey(e.target.value)}\r\n            >\r\n              <option value=\"\">Select Order</option>\r\n              <option value=\"ascending\">Ascending</option>\r\n              <option value=\"descending\">Descending</option>\r\n            </select>\r\n            <button className=\"sort-button\" onClick={handleSort}>\r\n              Sort\r\n            </button>\r\n          </div>\r\n          {sortError && <div className=\"error-message\">{sortError}</div>}\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <div className=\"table-wrapper\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  {columns.map((column) => (\r\n                    <th key={column.accessor}>{column.Header}</th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((row, index) => (\r\n                  <tr key={index}>\r\n                    {columns.map((column) => (\r\n                      <td key={column.accessor}>{row[column.accessor]}</td>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          \r\n            </div>\r\n      </div></div>}\r\n      <select\r\n    className=\"region-dropdown\"\r\n    value={region}\r\n    onChange={(e) => setSelectedRegion(e.target.value)}\r\n  >\r\n    <option value=\"\">Select Region</option>\r\n    {regions.map((region) => (\r\n      <option key={region} value={region}>{region}</option>\r\n    ))}\r\n  </select>\r\n          (\r\n          <div className=\"next-button-container\">\r\n            {showSortContainer&&\r\n            <h1 >for retrieve other region change the region/ for retrieve more data - and click on the buttun  </h1>}\r\n            <button className=\"next-button\" onClick={handleClickNext}>\r\n            retrieve EC2 instance for Selected Region\r\n            </button>\r\n            </div>\r\n          \r\n        )\r\n\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\nexport default EC2DashboardPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}