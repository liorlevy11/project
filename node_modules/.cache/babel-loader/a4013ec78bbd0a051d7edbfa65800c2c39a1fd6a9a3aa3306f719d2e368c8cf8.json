{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u05D0\\u05D5\\u05E0\\u05D9\\u05D1\\u05E8\\u05E1\\u05D9\\u05D8\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D5\\\\cisco\\\\\\u200F\\u200Freact-table-tutorial - \\u05E2\\u05D5\\u05EA\\u05E7\\\\src\\\\components\\\\EC2DashboardPage.js\";\n// import \"./EC2Dashboard.css\";\n// import fakeData from \"../MOCK_DATA.json\";\n// import * as React from \"react\";\n// import { useTable } from \"react-table\";\n\n// function EC2Dashboard() {\n//   const data = React.useMemo(() => fakeData, []);\n\n//   const columns = React.useMemo(\n//     () => [\n//       {\n//         Header: \"Name\",\n//         accessor: \"name\",\n//       },\n//       {\n//         Header: \"ID\",\n//         accessor: \"id\",\n//       },\n//       {\n//         Header: \"Type\",\n//         accessor: \"type\",\n//       },\n//       {\n//         Header: \"State\",\n//         accessor: \"state\",\n//       },\n//       {\n//         Header: \"AZ\",\n//         accessor: \"az\",\n//       },\n//       {\n//         Header: \"Public IP\",\n//         accessor: \"publicIP\",\n//       },\n//       {\n//         Header: \"Private IPs\",\n//         accessor: \"privateIPs\",\n//       },\n//     ],\n//     []\n//   );\n\n//   const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n//     useTable({ columns, data });\n\n//   return (\n//     <div className=\"App\">\n//       <h1 className=\"title\">Active EC2 Instances</h1>\n//       <div className=\"container\">\n//         <h2 className=\"choose-sorting\">Choose Sorting</h2>\n//         <div className=\"transparent-square\">\n//           <div className=\"dropdown-container\">\n//             <select className=\"attribute-dropdown\">\n//               <option value=\"name\">Name</option>\n//               <option value=\"id\">ID</option>\n//               <option value=\"type\">Type</option>\n//               <option value=\"state\">State</option>\n//               <option value=\"az\">AZ</option>\n//               <option value=\"publicIP\">Public IP</option>\n//               <option value=\"privateIPs\">Private IPs</option>\n//             </select>\n//             <select className=\"order-dropdown\">\n//               <option value=\"ascending\">Ascending</option>\n//               <option value=\"descending\">Descending</option>\n//             </select>\n//             {/* Add the \"Sort\" button */}\n//             <button className=\"sort-button\">Sort</button>\n//           </div>\n//         </div>\n//         <div className=\"table-container\">\n//           <div className=\"table-wrapper\">\n//             <table {...getTableProps()}>\n//               <thead>\n//                 {headerGroups.map((headerGroup) => (\n//                   <tr {...headerGroup.getHeaderGroupProps()}>\n//                     {headerGroup.headers.map((column) => (\n//                       <th {...column.getHeaderProps()}>\n//                         {column.render(\"Header\")}\n//                       </th>\n//                     ))}\n//                   </tr>\n//                 ))}\n//               </thead>\n//               <tbody {...getTableBodyProps()}>\n//                 {rows.map((row) => {\n//                   prepareRow(row);\n//                   return (\n//                     <tr {...row.getRowProps()}>\n//                       {row.cells.map((cell) => (\n//                         <td {...cell.getCellProps()}>\n//                           {cell.render(\"Cell\")}\n//                         </td>\n//                       ))}\n//                     </tr>\n//                   );\n//                 })}\n//               </tbody>\n//             </table>\n//           </div>\n//           {/* Add the \"Next\" button */}\n//           <div className=\"next-button-container\">\n//             <button className=\"next-button\">Next</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default EC2Dashboard;\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EC2DashboardPage() {\n  // const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"EC2 Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"EC2 dashboard page content goes here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_c = EC2DashboardPage;\nexport default EC2DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"EC2DashboardPage\");","map":{"version":3,"names":["React","useNavigate","EC2DashboardPage"],"sources":["C:/אוניברסיטה/לימודים/סמסטר ו/cisco/‏‏react-table-tutorial - עותק/src/components/EC2DashboardPage.js"],"sourcesContent":["// import \"./EC2Dashboard.css\";\r\n// import fakeData from \"../MOCK_DATA.json\";\r\n// import * as React from \"react\";\r\n// import { useTable } from \"react-table\";\r\n\r\n// function EC2Dashboard() {\r\n//   const data = React.useMemo(() => fakeData, []);\r\n\r\n//   const columns = React.useMemo(\r\n//     () => [\r\n//       {\r\n//         Header: \"Name\",\r\n//         accessor: \"name\",\r\n//       },\r\n//       {\r\n//         Header: \"ID\",\r\n//         accessor: \"id\",\r\n//       },\r\n//       {\r\n//         Header: \"Type\",\r\n//         accessor: \"type\",\r\n//       },\r\n//       {\r\n//         Header: \"State\",\r\n//         accessor: \"state\",\r\n//       },\r\n//       {\r\n//         Header: \"AZ\",\r\n//         accessor: \"az\",\r\n//       },\r\n//       {\r\n//         Header: \"Public IP\",\r\n//         accessor: \"publicIP\",\r\n//       },\r\n//       {\r\n//         Header: \"Private IPs\",\r\n//         accessor: \"privateIPs\",\r\n//       },\r\n//     ],\r\n//     []\r\n//   );\r\n\r\n//   const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n//     useTable({ columns, data });\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <h1 className=\"title\">Active EC2 Instances</h1>\r\n//       <div className=\"container\">\r\n//         <h2 className=\"choose-sorting\">Choose Sorting</h2>\r\n//         <div className=\"transparent-square\">\r\n//           <div className=\"dropdown-container\">\r\n//             <select className=\"attribute-dropdown\">\r\n//               <option value=\"name\">Name</option>\r\n//               <option value=\"id\">ID</option>\r\n//               <option value=\"type\">Type</option>\r\n//               <option value=\"state\">State</option>\r\n//               <option value=\"az\">AZ</option>\r\n//               <option value=\"publicIP\">Public IP</option>\r\n//               <option value=\"privateIPs\">Private IPs</option>\r\n//             </select>\r\n//             <select className=\"order-dropdown\">\r\n//               <option value=\"ascending\">Ascending</option>\r\n//               <option value=\"descending\">Descending</option>\r\n//             </select>\r\n//             {/* Add the \"Sort\" button */}\r\n//             <button className=\"sort-button\">Sort</button>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"table-container\">\r\n//           <div className=\"table-wrapper\">\r\n//             <table {...getTableProps()}>\r\n//               <thead>\r\n//                 {headerGroups.map((headerGroup) => (\r\n//                   <tr {...headerGroup.getHeaderGroupProps()}>\r\n//                     {headerGroup.headers.map((column) => (\r\n//                       <th {...column.getHeaderProps()}>\r\n//                         {column.render(\"Header\")}\r\n//                       </th>\r\n//                     ))}\r\n//                   </tr>\r\n//                 ))}\r\n//               </thead>\r\n//               <tbody {...getTableBodyProps()}>\r\n//                 {rows.map((row) => {\r\n//                   prepareRow(row);\r\n//                   return (\r\n//                     <tr {...row.getRowProps()}>\r\n//                       {row.cells.map((cell) => (\r\n//                         <td {...cell.getCellProps()}>\r\n//                           {cell.render(\"Cell\")}\r\n//                         </td>\r\n//                       ))}\r\n//                     </tr>\r\n//                   );\r\n//                 })}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//           {/* Add the \"Next\" button */}\r\n//           <div className=\"next-button-container\">\r\n//             <button className=\"next-button\">Next</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default EC2Dashboard;\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction EC2DashboardPage() {\r\n // const navigate = useNavigate();\r\n  return (\r\n    <div>\r\n      <h1>EC2 Dashboard</h1>\r\n      <p>EC2 dashboard page content goes here...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EC2DashboardPage;"],"mappingszB,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,SAASC,gBAAgB,GAAG;EAC3B;EACC,oBACE;IAAA,wBACE;MAAA,UAAI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,eACtB;MAAA,UAAG;IAAuC;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1C;AAEV;AAAC,KARQA,gBAAgB;AAUzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}