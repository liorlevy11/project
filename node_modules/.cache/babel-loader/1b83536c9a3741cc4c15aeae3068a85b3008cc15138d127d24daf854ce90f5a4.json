{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\dashboard_EC2\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = props => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [accessKeyId, setAccessKeyId] = useState(\"\");\n  const [secretAccessKey, setSecretAccessKey] = useState(\"\");\n  const [freeUser, setFreeUser] = useState(true);\n  const [registrationMessage, setRegistrationMessage] = useState(\"\");\n  const validatePassword = password => {\n    // Regex pattern for password validation (at least 6 characters, including a capital letter and a special sign)\n    const pattern = /^(?=.*[A-Z])(?=.*[!@#$&*])(?=.{6,})/;\n    return pattern.test(password);\n  };\n  const validateEmail = email => {\n    // Regex pattern for email validation\n    const pattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    return pattern.test(email);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validatePassword(password)) {\n      setRegistrationMessage(\"Invalid password: Password should contain at least 6 characters including a capital letter and a special sign.\");\n      return;\n    }\n    if (!validateEmail(email)) {\n      setRegistrationMessage(\"Invalid email address.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:3001/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password,\n          name,\n          accessKeyId,\n          secretAccessKey,\n          freeUser\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setRegistrationMessage(data.message);\n        // Save the registration data and proceed with login\n      } else {\n        setRegistrationMessage(data.message);\n      }\n    } catch (error) {\n      console.log(error);\n      setRegistrationMessage(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n        alt: \"profile-img\",\n        className: \"profile-img-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"register-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Full name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            name: \"name\",\n            onChange: e => setName(e.target.value),\n            id: \"name\",\n            placeholder: \"full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            type: \"email\",\n            placeholder: \"youremail@gmail.com\",\n            id: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            type: \"password\",\n            placeholder: \"********\",\n            id: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"accessKeyId\",\n            children: \"Access Key ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: accessKeyId,\n            onChange: e => setAccessKeyId(e.target.value),\n            type: \"password\",\n            placeholder: \"Access Key ID\",\n            id: \"accessKeyId\",\n            name: \"accessKeyId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"secretAccessKey\",\n            children: \"Secret Access Key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: secretAccessKey,\n            onChange: e => setSecretAccessKey(e.target.value),\n            type: \"password\",\n            placeholder: \"Secret Access Key\",\n            id: \"secretAccessKey\",\n            name: \"secretAccessKey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"free User\",\n            children: \"AWS Free User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: freeUser,\n            onChange: e => setFreeUser(e.target.checked),\n            id: \"freeUser\",\n            name: \"freeUser\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"link-btn\",\n          onClick: () => props.onFormSwitch(\"login\"),\n          children: \"Already have an account? Login here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }, this), registrationMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: registrationMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"m7tueerTp8vVknbyw328XI7jwMw=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","Register","props","email","setEmail","password","setPassword","name","setName","accessKeyId","setAccessKeyId","secretAccessKey","setSecretAccessKey","freeUser","setFreeUser","registrationMessage","setRegistrationMessage","validatePassword","pattern","test","validateEmail","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","error","console","log","target","value","checked","onFormSwitch"],"sources":["C:/Users/USER/Desktop/dashboard_EC2/src/components/Register.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Register = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [accessKeyId, setAccessKeyId] = useState(\"\");\r\n  const [secretAccessKey, setSecretAccessKey] = useState(\"\");\r\n  const [freeUser, setFreeUser] = useState(true);\r\n  const [registrationMessage, setRegistrationMessage] = useState(\"\");\r\n\r\n  const validatePassword = (password) => {\r\n    // Regex pattern for password validation (at least 6 characters, including a capital letter and a special sign)\r\n    const pattern = /^(?=.*[A-Z])(?=.*[!@#$&*])(?=.{6,})/;\r\n    return pattern.test(password);\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    // Regex pattern for email validation\r\n    const pattern = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return pattern.test(email);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validatePassword(password)) {\r\n      setRegistrationMessage(\r\n        \"Invalid password: Password should contain at least 6 characters including a capital letter and a special sign.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(email)) {\r\n      setRegistrationMessage(\"Invalid email address.\");\r\n      return;\r\n    }\r\n\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n          name,\r\n          accessKeyId,\r\n          secretAccessKey,\r\n          freeUser,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setRegistrationMessage(data.message);\r\n        // Save the registration data and proceed with login\r\n      } else {\r\n        setRegistrationMessage(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setRegistrationMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n    <div className=\"card card-container\">\r\n      <img\r\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n        alt=\"profile-img\"\r\n        className=\"profile-img-card\"\r\n      />\r\n    <div className=\"auth-form-container\">\r\n      <h2>Register</h2>\r\n      <form className=\"register-form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"name\">Full name</label>\r\n        <input value={name} name=\"name\" onChange={(e) => setName(e.target.value)} id=\"name\" placeholder=\"full Name\" />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          type=\"email\"\r\n          placeholder=\"youremail@gmail.com\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          type=\"password\"\r\n          placeholder=\"********\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n        />\r\n        <label htmlFor=\"accessKeyId\">Access Key ID</label>\r\n        <input\r\n          value={accessKeyId}\r\n          onChange={(e) => setAccessKeyId(e.target.value)}\r\n          type=\"password\"\r\n          placeholder=\"Access Key ID\"\r\n          id=\"accessKeyId\"\r\n          name=\"accessKeyId\"\r\n        />\r\n        <label htmlFor=\"secretAccessKey\">Secret Access Key</label>\r\n        <input\r\n          value={secretAccessKey}\r\n          onChange={(e) => setSecretAccessKey(e.target.value)}\r\n          type=\"password\"\r\n          placeholder=\"Secret Access Key\"\r\n          id=\"secretAccessKey\"\r\n          name=\"secretAccessKey\"\r\n        />\r\n        <label htmlFor=\"free User\">AWS Free User</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={freeUser}\r\n          onChange={(e) => setFreeUser(e.target.checked)}\r\n          id=\"freeUser\"\r\n          name=\"freeUser\"\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      <button className=\"link-btn\" onClick={() => props.onFormSwitch(\"login\")}>\r\n        Already have an account? Login here.\r\n      </button>\r\n      {registrationMessage && <p className=\"message\">{registrationMessage}</p>}\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}