{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u05D0\\u05D5\\u05E0\\u05D9\\u05D1\\u05E8\\u05E1\\u05D9\\u05D8\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D5\\\\cisco\\\\\\u200F\\u200F\\u200F\\u200Freact-table-tutorial - \\u05E2\\u05D5\\u05EA\\u05E7 - \\u05E2\\u05D5\\u05EA\\u05E7\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport EC2DashboardPage from \"./components/EC2DashboardPage\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState(\"\"); // Add new state for the logged-in user email\n\n  const handleLogin = email => {\n    setLoggedInUserEmail(email);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: () => /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        component: Register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/ec2-dashboard\",\n        component: () => /*#__PURE__*/_jsxDEV(EC2DashboardPage, {\n          email: loggedInUserEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZGWT5zItp+kpSVPwQT7ZNMs1OB4=\");\n_c = App;\nexport default App;\n\n// import React, { useState } from \"react\";\n// import Login from \"./components/Login\";\n// import Register from \"./components/Register\";\n// import EC2DashboardPage from \"./components/EC2DashboardPage\";\n// import \"./App.css\";\n\n// function App() {\n//   const [currentForm, setCurrentForm] = useState(\"login\");\n//   const [loggedInUserEmail, setLoggedInUserEmail] = useState(\"\"); // Add new state for the logged-in user email\n\n//   const toggleForm = (formName, email) => {\n//     setCurrentForm(formName);\n//     setLoggedInUserEmail(email); // Set the logged-in user email\n//   };\n\n//   const renderForm = () => {\n//     if (currentForm === \"login\") {\n//       return <Login onFormSwitch={toggleForm} />;\n//     } else if (currentForm === \"register\") {\n//       return <Register onFormSwitch={toggleForm} />;\n//     } else if (currentForm === \"ec2-dashboard\") {\n//       return <EC2DashboardPage onFormSwitch={toggleForm} email={loggedInUserEmail} />; // Pass the email as a prop to EC2DashboardPage\n//     }\n//   };\n\n//   return <div className=\"App\">{renderForm()}</div>;\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Login","Register","EC2DashboardPage","App","loggedInUserEmail","setLoggedInUserEmail","handleLogin","email"],"sources":["C:/אוניברסיטה/לימודים/סמסטר ו/cisco/‏‏‏‏react-table-tutorial - עותק - עותק/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport EC2DashboardPage from \"./components/EC2DashboardPage\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [loggedInUserEmail, setLoggedInUserEmail] = useState(\"\"); // Add new state for the logged-in user email\r\n\r\n  const handleLogin = (email) => {\r\n    setLoggedInUserEmail(email);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Route exact path=\"/\" component={() => <Login onLogin={handleLogin} />} />\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route path=\"/ec2-dashboard\" component={() => <EC2DashboardPage email={loggedInUserEmail} />} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// import React, { useState } from \"react\";\r\n// import Login from \"./components/Login\";\r\n// import Register from \"./components/Register\";\r\n// import EC2DashboardPage from \"./components/EC2DashboardPage\";\r\n// import \"./App.css\";\r\n\r\n// function App() {\r\n//   const [currentForm, setCurrentForm] = useState(\"login\");\r\n//   const [loggedInUserEmail, setLoggedInUserEmail] = useState(\"\"); // Add new state for the logged-in user email\r\n\r\n//   const toggleForm = (formName, email) => {\r\n//     setCurrentForm(formName);\r\n//     setLoggedInUserEmail(email); // Set the logged-in user email\r\n//   };\r\n\r\n//   const renderForm = () => {\r\n//     if (currentForm === \"login\") {\r\n//       return <Login onFormSwitch={toggleForm} />;\r\n//     } else if (currentForm === \"register\") {\r\n//       return <Register onFormSwitch={toggleForm} />;\r\n//     } else if (currentForm === \"ec2-dashboard\") {\r\n//       return <EC2DashboardPage onFormSwitch={toggleForm} email={loggedInUserEmail} />; // Pass the email as a prop to EC2DashboardPage\r\n//     }\r\n//   };\r\n\r\n//   return <div className=\"App\">{renderForm()}</div>;\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACjE,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEhE,MAAMU,WAAW,GAAIC,KAAK,IAAK;IAC7BF,oBAAoB,CAACE,KAAK,CAAC;EAC7B,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,SAAS,EAAE,mBAAM,QAAC,KAAK;UAAC,OAAO,EAAED;QAAY;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1E,QAAC,KAAK;QAAC,IAAI,EAAC,WAAW;QAAC,SAAS,EAAEL;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/C,QAAC,KAAK;QAAC,IAAI,EAAC,gBAAgB;QAAC,SAAS,EAAE,mBAAM,QAAC,gBAAgB;UAAC,KAAK,EAAEG;QAAkB;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACzF;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GAhBQD,GAAG;AAAA,KAAHA,GAAG;AAkBZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}