{"ast":null,"code":"var _jsxFileName = \"/Users/liolevy/Documents/university/sem G/project/project_1/ec2_dashboard/src/components/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage(_ref) {\n  _s();\n  let {\n    onLogout\n  } = _ref;\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const email = searchParams.get(\"email\");\n  const navigate = useNavigate();\n  const [sortKey, setSortKey] = useState(\"\");\n  const [dropdownKey, setDropdownKey] = useState(\"\");\n  const [sortedData, setSortedData] = useState([]);\n  const [sortError, setSortError] = useState(\"\");\n  const [region, setSelectedRegion] = useState(\"\");\n  const [showSortContainer, setShowContainer] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [showEmptyTable, setShowEmptyTable] = useState(false);\n  const pageSize = 20;\n  const handleSort = async () => {\n    if (!sortKey && !dropdownKey && !region) {\n      setSortError(\"To sort, you must select the region you want, attribute to sort by, and the order. Please select attribute and order.\");\n    } else if (!sortKey) {\n      setSortError(\"To sort, you must select the attribute to sort by. Please select attribute.\");\n    } else if (!dropdownKey) {\n      setSortError(\"To sort, you must select the attribute to sort by and the order. Please select order.\");\n    } else {\n      setSortError(\"\");\n      const sorted = [...sortedData].sort((a, b) => {\n        if (dropdownKey === \"ascending\") {\n          return a[sortKey].localeCompare(b[sortKey]);\n        } else {\n          return b[sortKey].localeCompare(a[sortKey]);\n        }\n      });\n      setSortedData(sorted);\n    }\n  };\n  const handleClickData = async () => {\n    try {\n      let response;\n      if (sortKey && dropdownKey) {\n        response = await axios.post(\"http://localhost:3001/sortData\", {\n          sortKey,\n          dropdownKey,\n          email,\n          region\n        });\n      } else {\n        setDropdownKey(\"ascending\");\n        setSortKey(\"name\");\n        response = await axios.post(\"http://localhost:3001/sortData\", {\n          sortKey,\n          dropdownKey,\n          email,\n          region\n        });\n      }\n      const newData = response.data;\n      if (newData.length === 0) {\n        setSortedData(newData);\n        setShowEmptyTable(false);\n      } else {\n        setSortedData(newData);\n        setShowContainer(true);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await axios.post(\"http://localhost:3001/logout\", {\n        email\n      });\n      onLogout();\n      navigate(\"/login\");\n    } catch (error) {\n      console.error(\"Error logging out:\", error);\n    }\n  };\n  const handleClickNext = () => {\n    setCurrentPage(prevPage => prevPage + 1);\n  };\n  const handleClickPrevious = () => {\n    setCurrentPage(prevPage => prevPage - 1);\n  };\n  const columns = useMemo(() => [{\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"ID\",\n    accessor: \"id\"\n  }, {\n    Header: \"Type\",\n    accessor: \"type\"\n  }, {\n    Header: \"State\",\n    accessor: \"state\"\n  }, {\n    Header: \"AZ\",\n    accessor: \"az\"\n  }, {\n    Header: \"Public IP\",\n    accessor: \"publicIP\"\n  }, {\n    Header: \"Private IPs\",\n    accessor: \"privateIPs\"\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-button-container\",\n      children: [showSortContainer && /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"  ********************************************                    for retrieve other region change the region/ for retrieve more data - and click on the buttun  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"data-button\",\n        onClick: handleClickData,\n        children: \"retrieve EC2 instance for Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"region-dropdown\",\n        value: region,\n        onChange: e => setSelectedRegion(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 5\n        }, this), regions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: region,\n          children: region\n        }, region, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logout-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 1\n    }, this), sortedData.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \" Detect an obfuscated \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \" Detect an obfuscated \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 84\n    }, this), showSortContainer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transparent-square\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"attribute-dropdown\",\n            value: sortKey,\n            onChange: e => setSortKey(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Attribute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"id\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"type\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"state\",\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"az\",\n              children: \"AZ\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"publicIP\",\n              children: \"Public IP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"privateIPs\",\n              children: \"Private IPs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"order-dropdown\",\n            value: dropdownKey,\n            onChange: e => setDropdownKey(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ascending\",\n              children: \"Ascending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"descending\",\n              children: \"Descending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sort-button\",\n            onClick: handleSort,\n            children: \"Sort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), sortError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: sortError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), showEmptyTable ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title2\",\n        children: \"There are no Active EC2 Instances for the selected region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: column.Header\n                }, column.accessor, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: sortedData.slice((currentPage - 1) * pageSize, currentPage * pageSize).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: columns.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row[column.accessor]\n                }, column.accessor, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 11\n                }, this))\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 7\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this), !showEmptyTable && currentPage > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"previous-page-button\",\n        onClick: handleClickPrevious,\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 3\n      }, this), !showEmptyTable && currentPage * pageSize < sortedData.length && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-page-button\",\n        onClick: handleClickNext,\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"P/ncJyjEFmukNseWJqYG6iHojVk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useMemo","useLocation","axios","useNavigate","HomePage","onLogout","location","searchParams","URLSearchParams","search","email","get","navigate","sortKey","setSortKey","dropdownKey","setDropdownKey","sortedData","setSortedData","sortError","setSortError","region","setSelectedRegion","showSortContainer","setShowContainer","currentPage","setCurrentPage","showEmptyTable","setShowEmptyTable","pageSize","handleSort","sorted","sort","a","b","localeCompare","handleClickData","response","post","newData","data","length","error","console","handleLogout","handleClickNext","prevPage","handleClickPrevious","columns","Header","accessor","e","target","value","regions","map","column","slice","row","index"],"sources":["/Users/liolevy/Documents/university/sem G/project/project_1/ec2_dashboard/src/components/HomePage.js"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction HomePage({ onLogout }) {\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const email = searchParams.get(\"email\");\r\n  const navigate = useNavigate();\r\n  const [sortKey, setSortKey] = useState(\"\");\r\n  const [dropdownKey, setDropdownKey] = useState(\"\");\r\n   const [sortedData, setSortedData] = useState([]);\r\n  const [sortError, setSortError] = useState(\"\");\r\n  const [region, setSelectedRegion] = useState(\"\");\r\n  const [showSortContainer, setShowContainer] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [showEmptyTable, setShowEmptyTable] = useState(false);\r\n\r\n\r\n  const pageSize = 20;\r\n\r\n\r\n  const handleSort = async () => {\r\n    if (!sortKey && !dropdownKey && !region) {\r\n      setSortError(\"To sort, you must select the region you want, attribute to sort by, and the order. Please select attribute and order.\");\r\n    } else if (!sortKey) {\r\n      setSortError(\"To sort, you must select the attribute to sort by. Please select attribute.\");\r\n    } else if (!dropdownKey) {\r\n      setSortError(\"To sort, you must select the attribute to sort by and the order. Please select order.\");\r\n    } else {\r\n      setSortError(\"\");\r\n  \r\n        const sorted = [...sortedData].sort((a, b) => {\r\n          if (dropdownKey === \"ascending\") {\r\n            return a[sortKey].localeCompare(b[sortKey]);\r\n          } else{ \r\n            return b[sortKey].localeCompare(a[sortKey]);\r\n          }\r\n        });\r\n        \r\n        setSortedData(sorted);\r\n    }\r\n  };\r\n \r\n  const handleClickData = async () => {\r\n    try {\r\n      let response;\r\n\r\n      if (sortKey && dropdownKey) {\r\n        response = await axios.post(\"http://localhost:3001/sortData\", { sortKey, dropdownKey, email,region });\r\n      } else {\r\n        setDropdownKey(\"ascending\");\r\n        setSortKey(\"name\");\r\n        response = await axios.post(\"http://localhost:3001/sortData\", { sortKey, dropdownKey, email,region });\r\n      }\r\n      \r\n      const newData = response.data;\r\n      if (newData.length === 0) { \r\n        setSortedData(newData);\r\n        setShowEmptyTable(false); }\r\n        else{\r\n        setSortedData(newData);\r\n        setShowContainer(true);\r\n      }\r\n   \r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await axios.post(\"http://localhost:3001/logout\", { email });\r\n      onLogout(); \r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      console.error(\"Error logging out:\", error);\r\n    }\r\n  };\r\n\r\n  const handleClickNext = () => {\r\n    setCurrentPage((prevPage) => prevPage + 1);\r\n  };\r\n  const handleClickPrevious = () => {\r\n    setCurrentPage((prevPage) => prevPage - 1);\r\n  };\r\n  \r\n  \r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"name\",\r\n      },\r\n      {\r\n        Header: \"ID\",\r\n        accessor: \"id\",\r\n      },\r\n      {\r\n        Header: \"Type\",\r\n        accessor: \"type\",\r\n      },\r\n      {\r\n        Header: \"State\",\r\n        accessor: \"state\",\r\n      },\r\n      {\r\n        Header: \"AZ\",\r\n        accessor: \"az\",\r\n      },\r\n      {\r\n        Header: \"Public IP\",\r\n        accessor: \"publicIP\",\r\n      },\r\n      {\r\n        Header: \"Private IPs\",\r\n        accessor: \"privateIPs\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n          <div className=\"data-button-container\">\r\n            {showSortContainer&&\r\n            <h5>  ********************************************                    for retrieve other region change the region/ for retrieve more data - and click on the buttun  </h5>}\r\n            <button className=\"data-button\" onClick={handleClickData}>\r\n            retrieve EC2 instance for Selected Region\r\n            </button>\r\n            <select\r\n    className=\"region-dropdown\"\r\n    value={region}\r\n    onChange={(e) => setSelectedRegion(e.target.value)}\r\n  >\r\n    <option value=\"\">Select Region</option>\r\n    {regions.map((region) => (\r\n      <option key={region} value={region}>{region}</option>\r\n    ))}\r\n  </select>\r\n            </div>\r\n          \r\n        \r\n<div className=\"logout-button-container\">\r\n          <button className=\"logout-button\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n\r\n      {sortedData.length === 0? <h1 className=\"title\"> Detect an obfuscated </h1>: <h1 className=\"title\"> Detect an obfuscated </h1>}\r\n      {showSortContainer &&\r\n      <div className=\"container\">\r\n        <div className=\"transparent-square\">\r\n          <div className=\"dropdown-container\">\r\n            <select\r\n              className=\"attribute-dropdown\"\r\n              value={sortKey}\r\n              onChange={(e) => setSortKey(e.target.value)}\r\n            >\r\n              <option value=\"\">Select Attribute</option>\r\n              <option value=\"name\">Name</option>\r\n              <option value=\"id\">ID</option>\r\n              <option value=\"type\">Type</option>\r\n              <option value=\"state\">State</option>\r\n              <option value=\"az\">AZ</option>\r\n              <option value=\"publicIP\">Public IP</option>\r\n              <option value=\"privateIPs\">Private IPs</option>\r\n            </select>\r\n            <select\r\n              className=\"order-dropdown\"\r\n              value={dropdownKey}\r\n              onChange={(e) => setDropdownKey(e.target.value)}\r\n            >\r\n              <option value=\"\">Select Order</option>\r\n              <option value=\"ascending\">Ascending</option>\r\n              <option value=\"descending\">Descending</option>\r\n            </select>\r\n            <button className=\"sort-button\" onClick={handleSort}>\r\n              Sort\r\n            </button>\r\n          </div>\r\n          {sortError && <div className=\"error-message\">{sortError}</div>}\r\n        </div>\r\n        {showEmptyTable ? ( \r\n            <p className=\"title2\">There are no Active EC2 Instances for the selected region</p>\r\n          ) : (\r\n            <div className=\"table-container\">\r\n          <div className=\"table-wrapper\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  {columns.map((column) => (\r\n                    <th key={column.accessor}>{column.Header}</th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n  {sortedData\r\n    .slice((currentPage - 1) * pageSize, currentPage * pageSize)\r\n    .map((row, index) => (\r\n      <tr key={index}>\r\n        {columns.map((column) => (\r\n          <td key={column.accessor}>{row[column.accessor]}</td>\r\n        ))}\r\n      </tr>\r\n    ))}\r\n</tbody>\r\n            </table>\r\n          \r\n            </div>\r\n      </div>)}\r\n      {!showEmptyTable&& currentPage > 1 && (\r\n  <button className=\"previous-page-button\" onClick={handleClickPrevious}>\r\n    Previous Page\r\n  </button>\r\n)}\r\n{!showEmptyTable && currentPage * pageSize < sortedData.length && (\r\n  <button className=\"next-page-button\" onClick={handleClickNext}>\r\n    Next Page\r\n  </button>\r\n)}\r\n\r\n      </div>}\r\n\r\n         \r\n\r\n      </div>\r\n \r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}